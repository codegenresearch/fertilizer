import os\nimport pytest\n\nfrom .support import SetupTeardown\nfrom src.config import Config\nfrom src.errors import ConfigKeyError\n\nclass TestConfig(SetupTeardown):\n    def test_loads_config(self):\n        config = Config().load("tests/support/settings.json")\n        assert config.red_key == "red_key"\n        assert config.ops_key == "ops_key"\n\n    def test_raises_error_on_missing_config_file(self):\n        with pytest.raises(FileNotFoundError) as excinfo:\n            Config().load("tests/support/missing.json")\n        assert "tests/support/missing.json does not exist." in str(excinfo.value)\n\n    def test_raises_error_on_missing_key_without_default(self):\n        with open("/tmp/empty.json", "w") as f:\n            f.write("{}")\n        config = Config().load("/tmp/empty.json")\n        with pytest.raises(ConfigKeyError) as excinfo:\n            config.red_key\n        assert "Key 'red_key' not found in config file." in str(excinfo.value)\n        os.remove("/tmp/empty.json")\n\n    def test_returns_default_value_if_present(self):\n        with open("/tmp/empty.json", "w") as f:\n            f.write("{}")\n        config = Config().load("/tmp/empty.json")\n        assert config.server_port == "9713"\n        os.remove("/tmp/empty.json")\n