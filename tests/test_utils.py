from .helpers import SetupTeardown\n\nfrom src.utils import flatten, url_join\n\nclass TestFlatten(SetupTeardown):\n    def test_flatten_nested_list(self):\n        assert flatten([1, [2, 3], 4]) == [1, 2, 3, 4]\n\n    def test_flatten_flat_list(self):\n        assert flatten([1, 2, 3]) == [1, 2, 3]\n\n    def test_flatten_deeply_nested(self):\n        assert flatten([1, [2, [3, 4]], 5]) == [1, 2, 3, 4, 5]\n\n    def test_flatten_empty_list(self):\n        assert flatten([]) == []\n\n    def test_flatten_with_non_list_elements(self):\n        assert flatten([1, 'a', [2, 'b'], 3]) == [1, 'a', 2, 'b', 3]\n\nclass TestUrlJoin(SetupTeardown):\n    def test_join_paths_no_slashes(self):\n        path = url_join("/tmp", "test", "file")\n        assert path == "/tmp/test/file"\n\n    def test_join_paths_with_leading_slashes(self):\n        path = url_join("/tmp/", "test", "file")\n        assert path == "/tmp/test/file"\n\n    def test_join_paths_with_trailing_slashes(self):\n        path = url_join("/tmp", "test/", "file/")\n        assert path == "/tmp/test/file"\n\n    def test_join_paths_with_leading_and_trailing_slashes(self):\n        path = url_join("/tmp/", "test/", "file/")\n        assert path == "/tmp/test/file"\n\n    def test_join_full_uri(self):\n        path = url_join("http://example.com", "path", "to", "resource")\n        assert path == "http://example.com/path/to/resource"\n\n    def test_join_single_path(self):\n        path = url_join("/tmp")\n        assert path == "/tmp"\n\n    def test_join_no_paths(self):\n        path = url_join()\n        assert path == ""\n\n    def test_join_paths_with_empty_strings(self):\n        path = url_join("/tmp", "", "test", "file")\n        assert path == "/tmp/test/file"\n\n    def test_join_paths_with_bare_slashes(self):\n        path = url_join("/", "test", "/", "file", "/")\n        assert path == "/test/file"\n