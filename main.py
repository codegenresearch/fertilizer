import os\nfrom colorama import Fore\n\nfrom src.api import RedAPI, OpsAPI\nfrom src.args import parse_args\nfrom src.config import Config\nfrom src.scanner import scan_torrent_directory, scan_torrent_file\nfrom src.webserver import run_webserver\n\nclass CLIConfig:\n    DEFAULT_PORT = 9713\n    DEFAULT_RED_KEY = 'default_red_key'\n    DEFAULT_OPS_KEY = 'default_ops_key'\n\n    def __init__(self, config):\n        self.red_key = config.get('red_key', self.DEFAULT_RED_KEY)\n        self.ops_key = config.get('ops_key', self.DEFAULT_OPS_KEY)\n        self.port = int(os.environ.get('PORT', self.DEFAULT_PORT))\n\ndef cli_entrypoint(args):\n    try:\n        config = Config().load(args.config_file)\n        cli_config = CLIConfig(config)\n        red_api, ops_api = __verify_api_keys(cli_config)\n\n        if args.server:\n            run_webserver(args.input_directory, args.output_directory, red_api, ops_api, port=cli_config.port)\n        elif args.input_file:\n            print(scan_torrent_file(args.input_file, args.output_directory, red_api, ops_api))\n        elif args.input_directory:\n            print(scan_torrent_directory(args.input_directory, args.output_directory, red_api, ops_api))\n    except FileNotFoundError as e:\n        print(f"{Fore.RED}File not found: {str(e)}{Fore.RESET}")\n        exit(1)\n    except Exception as e:\n        print(f"{Fore.RED}An error occurred: {str(e)}{Fore.RESET}")\n        exit(1)\n\ndef __verify_api_keys(config):\n    try:\n        red_api = RedAPI(config.red_key)\n        ops_api = OpsAPI(config.ops_key)\n        # This will perform a lookup with the API and raise if there was a failure.\n        # Also caches the announce URL for future use which is a nice bonus\n        red_api.announce_url\n        ops_api.announce_url\n        return red_api, ops_api\n    except AttributeError as e:\n        print(f"{Fore.RED}Missing API key configuration: {str(e)}{Fore.RESET}")\n        exit(1)\n\nif __name__ == "__main__":\n    args = parse_args()\n    try:\n        cli_entrypoint(args)\n    except KeyboardInterrupt:\n        print(f"{Fore.RED}Exiting...{Fore.RESET}")\n        exit(1)\n